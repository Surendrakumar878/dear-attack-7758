{"ast":null,"code":"// src/components/badge.ts\nimport { cssVar, defineStyle, defineStyleConfig } from \"@chakra-ui/styled-system\";\nimport { transparentize } from \"@chakra-ui/theme-tools\";\nvar baseStyle = defineStyle({\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\"\n});\nvar $bg = cssVar(\"badge-bg\");\nvar $fg = cssVar(\"badge-color\");\nvar variantSolid = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const dark = transparentize(`${c}.500`, 0.6)(theme);\n  return {\n    [$bg.variable]: `colors.${c}.500`,\n    [$fg.variable]: `colors.white`,\n    _dark: {\n      [$bg.variable]: dark,\n      [$fg.variable]: `colors.whiteAlpha.800`\n    },\n    bg: $bg.reference,\n    color: $fg.reference\n  };\n});\nvar variantSubtle = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme);\n  return {\n    [$bg.variable]: `colors.${c}.100`,\n    [$fg.variable]: `colors.${c}.800`,\n    _dark: {\n      [$bg.variable]: darkBg,\n      [$fg.variable]: `colors.${c}.200`\n    },\n    bg: $bg.reference,\n    color: $fg.reference\n  };\n});\nvar variantOutline = defineStyle(props => {\n  const {\n    colorScheme: c,\n    theme\n  } = props;\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme);\n  return {\n    [$fg.variable]: `colors.${c}.500`,\n    _dark: {\n      [$fg.variable]: darkColor\n    },\n    color: $fg.reference,\n    boxShadow: `inset 0 0 0px 1px ${$fg.reference}`\n  };\n});\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar badgeTheme = defineStyleConfig({\n  baseStyle,\n  variants,\n  defaultProps: {\n    variant: \"subtle\",\n    colorScheme: \"gray\"\n  }\n});\nexport { badgeTheme };","map":{"version":3,"names":["cssVar","defineStyle","defineStyleConfig","transparentize","baseStyle","px","textTransform","fontSize","borderRadius","fontWeight","$bg","$fg","variantSolid","props","colorScheme","c","theme","dark","variable","_dark","bg","reference","color","variantSubtle","darkBg","variantOutline","darkColor","boxShadow","variants","solid","subtle","outline","badgeTheme","defaultProps","variant"],"sources":["/Users/madhukeshwaraaloor/dear-attack-7758/wondermart/node_modules/@chakra-ui/theme/dist/chunk-UTUD2BXK.mjs"],"sourcesContent":["// src/components/badge.ts\nimport {\n  cssVar,\n  defineStyle,\n  defineStyleConfig\n} from \"@chakra-ui/styled-system\";\nimport { transparentize } from \"@chakra-ui/theme-tools\";\nvar baseStyle = defineStyle({\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\"\n});\nvar $bg = cssVar(\"badge-bg\");\nvar $fg = cssVar(\"badge-color\");\nvar variantSolid = defineStyle((props) => {\n  const { colorScheme: c, theme } = props;\n  const dark = transparentize(`${c}.500`, 0.6)(theme);\n  return {\n    [$bg.variable]: `colors.${c}.500`,\n    [$fg.variable]: `colors.white`,\n    _dark: {\n      [$bg.variable]: dark,\n      [$fg.variable]: `colors.whiteAlpha.800`\n    },\n    bg: $bg.reference,\n    color: $fg.reference\n  };\n});\nvar variantSubtle = defineStyle((props) => {\n  const { colorScheme: c, theme } = props;\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme);\n  return {\n    [$bg.variable]: `colors.${c}.100`,\n    [$fg.variable]: `colors.${c}.800`,\n    _dark: {\n      [$bg.variable]: darkBg,\n      [$fg.variable]: `colors.${c}.200`\n    },\n    bg: $bg.reference,\n    color: $fg.reference\n  };\n});\nvar variantOutline = defineStyle((props) => {\n  const { colorScheme: c, theme } = props;\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme);\n  return {\n    [$fg.variable]: `colors.${c}.500`,\n    _dark: {\n      [$fg.variable]: darkColor\n    },\n    color: $fg.reference,\n    boxShadow: `inset 0 0 0px 1px ${$fg.reference}`\n  };\n});\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar badgeTheme = defineStyleConfig({\n  baseStyle,\n  variants,\n  defaultProps: {\n    variant: \"subtle\",\n    colorScheme: \"gray\"\n  }\n});\n\nexport {\n  badgeTheme\n};\n"],"mappings":"AAAA;AACA,SACEA,MAAM,EACNC,WAAW,EACXC,iBAAiB,QACZ,0BAA0B;AACjC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,IAAIC,SAAS,GAAGH,WAAW,CAAC;EAC1BI,EAAE,EAAE,CAAC;EACLC,aAAa,EAAE,WAAW;EAC1BC,QAAQ,EAAE,IAAI;EACdC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE;AACd,CAAC,CAAC;AACF,IAAIC,GAAG,GAAGV,MAAM,CAAC,UAAU,CAAC;AAC5B,IAAIW,GAAG,GAAGX,MAAM,CAAC,aAAa,CAAC;AAC/B,IAAIY,YAAY,GAAGX,WAAW,CAAEY,KAAK,IAAK;EACxC,MAAM;IAAEC,WAAW,EAAEC,CAAC;IAAEC;EAAM,CAAC,GAAGH,KAAK;EACvC,MAAMI,IAAI,GAAGd,cAAc,CAAE,GAAEY,CAAE,MAAK,EAAE,GAAG,CAAC,CAACC,KAAK,CAAC;EACnD,OAAO;IACL,CAACN,GAAG,CAACQ,QAAQ,GAAI,UAASH,CAAE,MAAK;IACjC,CAACJ,GAAG,CAACO,QAAQ,GAAI,cAAa;IAC9BC,KAAK,EAAE;MACL,CAACT,GAAG,CAACQ,QAAQ,GAAGD,IAAI;MACpB,CAACN,GAAG,CAACO,QAAQ,GAAI;IACnB,CAAC;IACDE,EAAE,EAAEV,GAAG,CAACW,SAAS;IACjBC,KAAK,EAAEX,GAAG,CAACU;EACb,CAAC;AACH,CAAC,CAAC;AACF,IAAIE,aAAa,GAAGtB,WAAW,CAAEY,KAAK,IAAK;EACzC,MAAM;IAAEC,WAAW,EAAEC,CAAC;IAAEC;EAAM,CAAC,GAAGH,KAAK;EACvC,MAAMW,MAAM,GAAGrB,cAAc,CAAE,GAAEY,CAAE,MAAK,EAAE,IAAI,CAAC,CAACC,KAAK,CAAC;EACtD,OAAO;IACL,CAACN,GAAG,CAACQ,QAAQ,GAAI,UAASH,CAAE,MAAK;IACjC,CAACJ,GAAG,CAACO,QAAQ,GAAI,UAASH,CAAE,MAAK;IACjCI,KAAK,EAAE;MACL,CAACT,GAAG,CAACQ,QAAQ,GAAGM,MAAM;MACtB,CAACb,GAAG,CAACO,QAAQ,GAAI,UAASH,CAAE;IAC9B,CAAC;IACDK,EAAE,EAAEV,GAAG,CAACW,SAAS;IACjBC,KAAK,EAAEX,GAAG,CAACU;EACb,CAAC;AACH,CAAC,CAAC;AACF,IAAII,cAAc,GAAGxB,WAAW,CAAEY,KAAK,IAAK;EAC1C,MAAM;IAAEC,WAAW,EAAEC,CAAC;IAAEC;EAAM,CAAC,GAAGH,KAAK;EACvC,MAAMa,SAAS,GAAGvB,cAAc,CAAE,GAAEY,CAAE,MAAK,EAAE,GAAG,CAAC,CAACC,KAAK,CAAC;EACxD,OAAO;IACL,CAACL,GAAG,CAACO,QAAQ,GAAI,UAASH,CAAE,MAAK;IACjCI,KAAK,EAAE;MACL,CAACR,GAAG,CAACO,QAAQ,GAAGQ;IAClB,CAAC;IACDJ,KAAK,EAAEX,GAAG,CAACU,SAAS;IACpBM,SAAS,EAAG,qBAAoBhB,GAAG,CAACU,SAAU;EAChD,CAAC;AACH,CAAC,CAAC;AACF,IAAIO,QAAQ,GAAG;EACbC,KAAK,EAAEjB,YAAY;EACnBkB,MAAM,EAAEP,aAAa;EACrBQ,OAAO,EAAEN;AACX,CAAC;AACD,IAAIO,UAAU,GAAG9B,iBAAiB,CAAC;EACjCE,SAAS;EACTwB,QAAQ;EACRK,YAAY,EAAE;IACZC,OAAO,EAAE,QAAQ;IACjBpB,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,SACEkB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}